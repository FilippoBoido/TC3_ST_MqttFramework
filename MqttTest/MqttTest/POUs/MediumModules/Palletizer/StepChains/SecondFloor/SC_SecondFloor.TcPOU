<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.2">
  <POU Name="SC_SecondFloor" Id="{cbbd2891-fc43-4186-abe0-a1a8275dd971}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SC_SecondFloor EXTENDS FB_Chain
VAR_INPUT
	bExecute : BOOL;
	bPlateOpen : BOOL;
END_VAR
VAR_OUTPUT
	bAllPartsPresent: BOOL;	
END_VAR
VAR
	fbPallBeltConveyor : PalletizerConveyor;
	fbPushCyl : Cylinder;
	fbTurnCyl : Cylinder;
	
	fbClampCyl : Cylinder;
	fbClampedSen : Sensor;
	
	fbPusherLimitSen : Sensor;
	fbPresenceDetector : PresenceDetector;
	iCycle : INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();

fbPushCyl();
fbTurnCyl();

fbClampCyl();
fbPallBeltConveyor();
fbPresenceDetector(bAllPartsPresent => bAllPartsPresent);]]></ST>
    </Implementation>
    <Method Name="Busy" Id="{9ab5514a-a41d-490b-9a99-ffb6abe5f8ac}">
      <Declaration><![CDATA[METHOD PROTECTED   Busy : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbStepWorkerBusy();
CASE fbStepWorkerBusy.uiStep OF
	
	eSecondFloorStart: //send release to scBeltConveyor
	
		iCycle := iCycle + 1;
		IF iCycle = 2
		THEN
			rChainController.releaseForChain('scBeltConveyors', THIS^);
			fbStepWorkerBusy.mNextStep(10);
		ELSE
			fbStepWorkerBusy.mNextStep(20);
		END_IF
		
		
		
	10: //wait for release from scBeltConveyor to start actuators
	
		IF rChainController
			.releaseCheck(THIS^)
			.releaseFromChain(sChainReleasing := 'scBeltConveyors', THIS^)
			.releaseResult(THIS^) 
		THEN
			fbStepWorkerBusy.mNextStep(20);
		END_IF
	
		
	20: //wait for packages
		
		fbTurnCyl.Extend();
		fbPallBeltConveyor.On();
		IF fbPresenceDetector.bAllPartsPresent
		THEN
			bAllPartsPresent := TRUE;
			fbPallBeltConveyor.Off();
			fbStepWorkerBusy.mNextStep(ePushPackages);
		END_IF	
		
	ePushPackages:
	
		fbPushCyl.Extend();
		
		fbStepWorkerBusy
			.mSetTimer(T#2S)
			.mNextStep(eRetractPusher);
		
	eRetractPusher:
	
		fbPushCyl.Retract();
		
		fbStepWorkerBusy
			.mSetTimer(T#2S)
			.mNextStep(eClamp);
			
	eClamp:
	
		fbClampCyl.Extend();
		fbStepWorkerBusy
			.mSetTimer(T#2S)
			.mNextStep(eRetractClamper);
			
	eRetractClamper:
	
		
		fbClampCyl.Retract();
		IF iCycle = 1
		THEN
			fbStepWorkerBusy
				.mSetTimer(T#2S)
				.mNextStep(eSecondFloorStart);
		ELSE
			iCycle := 0;
			fbStepWorkerBusy.mNextStep(eSyncWithFirstFloor);
		END_IF
		
	eSyncWithFirstFloor:
	
		rChainController.releaseForChain('scFirstFloor', THIS^);	
		fbStepWorkerBusy.mNextStep(eWaitForFirstFloor);
	
	eWaitForFirstFloor:
	
		IF rChainController
			.releaseCheck(THIS^)
			.releaseFromChain(sChainReleasing := 'scFirstFloor', THIS^)
			.releaseResult(THIS^) 
		THEN
			fbStepWorkerBusy.mNextStep(eSecondFloorDone);
		END_IF
		
	eSecondFloorDone:
		fbStepWorkerBusy.mNextStep(eSecondFloorStart);
		Done();	
	
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Error" Id="{54fc011b-0bdc-497c-83e9-e16b470645fb}">
      <Declaration><![CDATA[METHOD PROTECTED  Error : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Idle" Id="{f1b86f65-2ab3-4c06-9c94-6ef43dc472ea}">
      <Declaration><![CDATA[METHOD PROTECTED  Idle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{97c84f6f-0187-4362-810c-4de0217e8b37}">
      <Declaration><![CDATA[METHOD PROTECTED  Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Start();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Prepare" Id="{36c933cf-9b53-4ec2-b3d1-14bbe5df98f2}">
      <Declaration><![CDATA[METHOD PROTECTED  Prepare : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Ready" Id="{517c8a14-559f-4f37-8a25-7a64b054a837}">
      <Declaration><![CDATA[METHOD PROTECTED  Ready : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
fbStepWorkerReady();
CASE fbStepWorkerReady.uiStep OF
	
	0: 
	
		IF bExecute THEN
			fbStepWorkerReady.mNextStep(10);
		END_IF
		
	10:
		
		IF NOT fbPresenceDetector.bAllPartsPresent
			AND NOT bPlateOpen
		THEN
			rChainController.releaseForChain('scBeltConveyors', THIS^);	
			fbStepWorkerReady.mNextStep(20);	
		END_IF
	
	20:
		
		IF rChainController
			.releaseCheck(THIS^)
			.releaseFromChain(sChainReleasing := 'scBeltConveyors', THIS^)
			.releaseResult(THIS^) 
		THEN
			fbStepWorkerReady.mNextStep(0);
			Execute();
		END_IF
		
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Waiting" Id="{97c5ccd7-d726-4b89-af53-2743cec1a3bc}">
      <Declaration><![CDATA[METHOD PROTECTED  Waiting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="SC_SecondFloor">
      <LineId Id="23" Count="1" />
      <LineId Id="18" Count="4" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="SC_SecondFloor.Busy">
      <LineId Id="80" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="236" Count="1" />
      <LineId Id="241" Count="1" />
      <LineId Id="239" Count="1" />
      <LineId Id="238" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="155" Count="5" />
      <LineId Id="154" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="163" Count="7" />
      <LineId Id="162" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="172" Count="24" />
      <LineId Id="207" Count="0" />
      <LineId Id="197" Count="0" />
      <LineId Id="208" Count="1" />
      <LineId Id="215" Count="1" />
      <LineId Id="212" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="217" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="218" Count="3" />
      <LineId Id="229" Count="0" />
      <LineId Id="223" Count="5" />
      <LineId Id="222" Count="0" />
      <LineId Id="230" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="202" Count="1" />
      <LineId Id="205" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="142" Count="0" />
    </LineIds>
    <LineIds Name="SC_SecondFloor.Error">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="SC_SecondFloor.Idle">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="SC_SecondFloor.Init">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="SC_SecondFloor.Prepare">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="SC_SecondFloor.Ready">
      <LineId Id="63" Count="2" />
      <LineId Id="91" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="69" Count="1" />
      <LineId Id="92" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="93" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="80" Count="9" />
      <LineId Id="79" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="36" Count="0" />
    </LineIds>
    <LineIds Name="SC_SecondFloor.Waiting">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>