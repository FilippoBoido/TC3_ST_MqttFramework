<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="FB_TransferLine" Id="{2e7b366f-b9ef-4b13-bd70-7031bb32b800}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TransferLine EXTENDS StateMachine
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	aBeltConveyors : ARRAY[1..2] OF FB_BeltConveyor;
	aRollerConveyors : ARRAY[1..3] OF FB_RollerConveyor;
	
	fbCounterSensor : FB_Sensor;
	fbPalletizer : FB_Palletizer;
	fbStepWorkerReady : FB_StepWorker;
	fbStepWorkerBusy : FB_StepWorker;
	
	fbChainController : FB_ChainController;
	
	scBeltConveyors : FB_BeltConveyors;
	scPostPalletizer : FB_PostPalletizer;
	scPrePalletizer : FB_PrePalletizer;
 
	fbTrig : R_TRIG;
	uiPackageCounter : UINT;
	i : UINT;
	bPackageOnTheWay : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();

FOR i := 1 TO 3 
DO
	IF i <> eTlMaxNumBeltConveyors
	THEN
		aBeltConveyors[i]();
	END_IF
	
	IF i <> eTlMaxNumRollerConveyors
	THEN
		aRollerConveyors[i]();
	END_IF
END_FOR

fbPalletizer();]]></ST>
    </Implementation>
    <Method Name="Busy" Id="{3dde4417-0d0c-49da-9bd9-97065e9ed964}">
      <Declaration><![CDATA[METHOD PROTECTED   Busy : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE fbStepWorkerBusy.uiStep OF

	eTlBusyStart: 
	
		//At start we check how many packages have passed the fbCounterSensor
		IF uiPackageCounter < 3
		THEN
		
			//activate the conveyors
			fbStepWorkerBusy.mNextStep(eTlStartEntranceConveyor);
			
		ELSIF uiPackageCounter = 3
		 AND NOT fbPalletizer.bAllPartsPresent
		THEN
 			//A package needs to reach the palletizer or a sensor is malfunctioning
			aBeltConveyors[eBeltConveyorEntrance].Off();
			fbStepWorkerBusy.mNextStep(eTlStartUpwardsConveyor);
		ELSIF uiPackageCounter = 3
		 AND fbPalletizer.bAllPartsPresent
	 	THEN
			//Execute the Palletizer
			aBeltConveyors[eBeltConveyorUpwards].Off();
			fbStepWorkerBusy.mNextStep(eTlExecutePalletizer);
		ELSIF uiPackageCounter > 3
		THEN
			//Error
		END_IF
		
	eTlStartEntranceConveyor:
		
		aBeltConveyors[eBeltConveyorEntrance].On();
		fbStepWorkerBusy.mAddCondition(fbCounterSensor.getSignal);
		fbStepWorkerBusy.mNextStep(eTlStartUpwardsConveyor);

	eTlStartUpwardsConveyor:
	
		aBeltConveyors[eBeltConveyorUpwards].On();
		fbStepWorkerBusy.mNextStep(eTlExecutePalletizer);
			 
	eTlExecutePalletizer:
		 
		fbPalletizer.Execute();
		fbStepWorkerBusy.mAddCondition(fbPalletizer.getDoneCycle);
		fbStepWorkerBusy.mNextStep(eTlBusyStart);
		 
	eTlSignalError:
	
		fbStepWorkerBusy.mNextStep(eTlBusyStart);
		Fault();	
		
		
END_CASE
		]]></ST>
      </Implementation>
    </Method>
    <Method Name="Error" Id="{dcf9a9b3-729d-4763-8c13-3d1ffd1dfd1e}">
      <Declaration><![CDATA[METHOD PROTECTED  Error : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO 3 
DO
	IF i <> eTlMaxNumBeltConveyors
	THEN
		aBeltConveyors[i].Off();
	END_IF
	
	IF i <> eTlMaxNumRollerConveyors
	THEN
		aRollerConveyors[i].Off();
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{4357aa31-540d-408d-bbfa-5ee1874096be}">
      <Declaration><![CDATA[METHOD PROTECTED  Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Start();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Ready" Id="{4f0f5542-23e8-48a2-84b3-069ccd15f633}">
      <Declaration><![CDATA[METHOD PROTECTED  Ready : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TransferLine">
      <LineId Id="37" Count="14" />
      <LineId Id="31" Count="0" />
    </LineIds>
    <LineIds Name="FB_TransferLine.Busy">
      <LineId Id="6" Count="2" />
      <LineId Id="63" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="62" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="14" Count="3" />
      <LineId Id="58" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="18" Count="3" />
      <LineId Id="59" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="22" Count="2" />
      <LineId Id="5" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="26" Count="4" />
      <LineId Id="36" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="52" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
    </LineIds>
    <LineIds Name="FB_TransferLine.Error">
      <LineId Id="6" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TransferLine.Init">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_TransferLine.Ready">
      <LineId Id="23" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>